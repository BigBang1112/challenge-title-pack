{
	"Structs": {
		"SChMetadata": {
			"Explanation": "Script metadata used to identify a script.",
			"Supported": true,
			"Members": [
				{
					"Type": "Text",
					"Name": "Name",
 					"Explanation": "Unique name of the script. If the same name exists in the database, script will be rejected from publishing."
				},
				{
					"Type": "Text",
					"Name": "AuthorLogin",
 					"Explanation": "Login of the author. Publishing checks this value with your Maniaplanet identity so using other logins will reject the script from publishing."
				},
				{
					"Type": "Text",
					"Name": "Description",
 					"Explanation": "Description for the script."
				},
				{
					"Type": "Text",
					"Name": "CompatibleCollections",
 					"Explanation": "Compatible environments seperated by comma. Modifier will reject the script if it's used on a map with incompatible environment."
				}
			]
		},
		"SChBlock": {
			"Explanation": "Block placed on a map.",
			"Supported": true,
			"Members": [
				{
					"Type": "Integer",
					"Name": "Id",
 					"Explanation": "Unique identification number of the block."
				},
				{
					"Type": "Text",
					"Name": "Name",
 					"Explanation": "Name of the block."
				},
				{
					"Type": "Int3",
					"Name": "Coord",
 					"Explanation": "Coordination of the block."
				},
				{
					"Type": "Text",
					"Name": "Direction",
 					"Explanation": "Name of the direction for the block."
				},
				{
					"Type": "Boolean",
					"Name": "IsRoad",
 					"Explanation": "If the block is road type."
				},
				{
					"Type": "Boolean",
					"Name": "IsTerrain",
 					"Explanation": "If the block is terrain."
				},
				{
					"Type": "Boolean",
					"Name": "IsPodium",
 					"Explanation": "If the block is podium."
				},
				{
					"Type": "SChAnchor",
					"Array": true,
					"Name": "Anchors",
 					"Explanation": "Anchors used for this block."
				},
				{
					"Type": "Boolean",
					"Name": "NoRespawn",
 					"Explanation": "If the block allows respawn."
				},
				{
					"Type": "Boolean",
					"Name": "IsSpecial",
 					"Explanation": "If the block is special (is constructed with multiple subblocks)."
				},
				{
					"Type": "Text",
					"Name": "Waypoint",
 					"Explanation": "Name of the waypoint. Empty text if the block isnt waypoint."
				}
			]
		},
		"SChMacroblock": {
			"Explanation": "Macroblock placed on a map (basically fixed set of blocks).",
			"Supported": true,
			"Members": [
				{
					"Type": "Boolean",
					"Name": "IsGround",
 					"Explanation": "If the macroblock is forced to be placed on the ground."
				},
				{
					"Type": "Boolean",
					"Name": "HasStart",
 					"Explanation": "If the macroblock has a start waypoint."
				},
				{
					"Type": "Boolean",
					"Name": "HasFinish",
 					"Explanation": "If the macroblock has a finish waypoint."
				},
				{
					"Type": "Boolean",
					"Name": "HasCheckpoint",
 					"Explanation": "If the macroblock has a checkpoint waypoint."
				},
				{
					"Type": "Boolean",
					"Name": "HasMultilap",
 					"Explanation": "If the macroblock has a multilap waypoint."
				},
				{
					"Type": "Text",
					"Name": "Name",
 					"Explanation": "Name of the macroblock."
				}
			]
		},
		"SChItem": {
			"Explanation": "Item placed on a map. Currently, can't handle more than a position.",
			"Supported": true,
			"Members": [
				{
					"Type": "Vec3",
					"Name": "Position",
 					"Explanation": "Position of the item on a map."
				}
			]
		},
		"SChWaypoint": {
			"Explanation": "Block or item with a trigger.",
			"Supported": true,
			"Members": [
				{ "Type": "Text", "Name": "Type", "Explanation": "Type of the waypoint."},
				{ "Type": "Boolean", "Name": "IsBlock", "Explanation": "If the waypoint is block."},
				{ "Type": "SChBlock", "Name": "Block", "Explanation": "Block information. It is recommended to check IsBlock first."},
				{ "Type": "Boolean", "Name": "IsItem", "Explanation": "If the waypoint is item."},
				{ "Type": "SChItem", "Name": "Item", "Explanation": "Item information. It is recommended to check IsItem first."}
			]
		},
		"SChApproxBlock": {
			"Explanation": "An imaginary block that is located absolutely to some location.",
			"Supported": true,
			"Members": [
				{ "Type": "Text", "Name": "Name", "Explanation": "Name of the block."},
				{ "Type": "Text", "Name": "Coord", "Explanation": "Coordination of the block."},
				{ "Type": "Text", "Name": "Direction", "Explanation": "Name of the direction for the block."}
			]
		},
		"SChRelationBlock": {
			"Explanation": "An imaginary block that is located relatively to some location.",
			"Supported": true,
			"Members": [
				{ "Type": "Text", "Name": "Name", "Explanation": "Name of the block."},
				{ "Type": "Text", "Name": "Coord", "Explanation": "Coordination of the block."},
				{ "Type": "Integer", "Name": "Direction", "Explanation": "Direction offset for the block (clockwise)."}
			]
		},
		"SChAnchor": {
			"Explanation": "Block or item that is able to contain additional data (currently only compatible with waypoints).",
			"Supported": true,
			"Members": [
				{
					"Type": "Text",
					"Name": "Id",
 					"Explanation": "Unique identification number of the anchor."
				},
				{
					"Type": "Text",
					"Name": "DefaultTag",
 					"Explanation": "Tag defined by the map."
				},
				{
					"Type": "Integer",
					"Name": "DefaultOrder",
 					"Explanation": "Order defined by the map."
				},
				{
					"Type": "Text",
					"Name": "Tag",
 					"Explanation": "Overriden tag by a script or other source."
				},
				{
					"Type": "Integer",
					"Name": "Order",
 					"Explanation": "Overriden order by a script or other source."
				}
			]
		},
		"SReplacementResult": {
			"Explanation": "Result of ReplaceBlock containing successful removal and placement.",
			"Supported": false,
			"Members": [
				{
					"Type": "Boolean",
					"Name": "Removed",
 					"Explanation": "If the old block was successfully removed."
				},
				{
					"Type": "Boolean",
					"Name": "Placed",
 					"Explanation": "If the new block was successfully placed."
				},
				{
					"Type": "SChBlock",
					"Name": "Block",
 					"Explanation": "The new replaced block."
				}
			]
		},
		"SPlaceBlockResult": {
			"Explanation": "Result of PlaceBlock containing successful placement and the block feedback.",
			"Supported": true,
			"Members": [
				{
					"Type": "Boolean",
					"Name": "Placed",
 					"Explanation": "If the block was successfully placed."
				},
				{
					"Type": "SChBlock",
					"Name": "Block",
 					"Explanation": "Information about the actual placed block. It is recommended to check Placed first."
				}
			]
		},
		"SChSolution": {
			"Explanation": "Informative structure that Solver uses to define solutions for problems.",
			"Supported": true,
			"Members": [
				{
					"Type": "Text",
					"Name": "Value",
 					"Explanation": "Brief description of the solution."
				},
				{
					"Type": "Text",
					"Name": "AdditionalInfo",
 					"Explanation": "Additional information of the solution."
				},
				{
					"Type": "Boolean",
					"Name": "IsInteractive",
 					"Explanation": "If the solution is clickable."
				}
			]
		},
		"SChProblem": {
			"Explanation": "Informative structure that Solver uses to define problems.",
			"Supported": true,
			"Members": [
				{
					"Type": "Text",
					"Name": "Name",
 					"Explanation": "Identification name of the problem. Usual format is PROBLEM_[UPPERCASE_PROBLEM_NAME]"
				},
				{
					"Type": "Int3",
					"Array": true,
					"Name": "Coords",
 					"Explanation": "Coordinations that Solver will use to navigate you throughout the problem."
				},
				{
					"Type": "SChWaypoint",
					"Array": true,
					"Name": "Waypoints",
 					"Explanation": "Waypoints that Solver will use to navigate your throughout the problem."
				},
				{
					"Type": "SChBlock",
					"Array": true,
					"Name": "Blocks",
 					"Explanation": "Blocks that Solver will use to navigate your throughout the problem."
				},
				{
					"Type": "SChItem",
					"Array": true,
					"Name": "Items",
 					"Explanation": "Items that Solver will use to navigate your throughout the problem."
				},
				{
					"Type": "SChApproxBlock",
					"Array": true,
					"Name": "ApproxBlocks",
 					"Explanation": "Approximate blocks that Solver will use to navigate your throughout the problem."
				},
				{
					"Type": "Text",
					"Name": "ShortDescription",
 					"Explanation": "Short description of the problem displayed on the right side."
				},
				{
					"Type": "Text",
					"Name": "LongDescription",
 					"Explanation": "Long description of the problem displayed in Solver user interface."
				},
				{
					"Type": "SChSolution",
					"Array": true,
					"Name": "Solutions",
 					"Explanation": "Solutions that Solver will use to navigate your throughout the problem."
				}
			]
		},
		"SChNote": {
			"Explanation": "Informative structure that tells Modifier to display additional minor information in the user interface.",
			"Supported": false,
			"Members": [
				{
					"Type": "Text",
					"Name": "Name",
 					"Explanation": "Identification name of the problem. Usual format is PROBLEM_[UPPERCASE_PROBLEM_NAME]"
				},
				{
					"Type": "Text",
					"Name": "Value",
 					"Explanation": "Note information."
				},
				{
					"Type": "Int3",
					"Array": true,
					"Name": "Coords",
 					"Explanation": "Coordinations that Solver will use to navigate you throughout the problem."
				},
				{
					"Type": "SChWaypoint",
					"Array": true,
					"Name": "Waypoints",
 					"Explanation": "Waypoints that Solver will use to navigate your throughout the problem."
				},
				{
					"Type": "SChBlock",
					"Array": true,
					"Name": "Blocks",
 					"Explanation": "Blocks that Solver will use to navigate your throughout the problem."
				},
				{
					"Type": "SChItem",
					"Array": true,
					"Name": "Items",
 					"Explanation": "Items that Solver will use to navigate your throughout the problem."
				},
				{
					"Type": "SChApproxBlock",
					"Array": true,
					"Name": "ApproxBlocks",
 					"Explanation": "Approximate blocks that Solver will use to navigate your throughout the problem."
				},
				{
					"Type": "Text",
					"Name": "ShortDescription",
 					"Explanation": "Short description of the problem displayed on the right side."
				},
				{
					"Type": "Text",
					"Name": "LongDescription",
 					"Explanation": "Long description of the problem displayed in Solver user interface."
				}
			]
		},
		"SChMap": {
			"Explanation": "Detailed information about a map.",
			"Supported": true,
			"Members": [
				{ "Type": "Text", "Name": "MapUid", "Explanation": "" },
				{ "Type": "Text", "Name": "Comments", "Explanation": "" },
				{ "Type": "Integer", "Name": "CopperPrice", "Explanation": "" },
				{ "Type": "Text", "Name": "CollectionName", "Explanation": "" },
				{ "Type": "Text", "Name": "AuthorLogin", "Explanation": "" },
				{ "Type": "Text", "Name": "AuthorNickName", "Explanation": "" },
				{ "Type": "Text", "Name": "AuthorZonePath", "Explanation": "" },
				{ "Type": "Text", "Name": "AuthorZoneFlagUrl", "Explanation": "" },
				{ "Type": "Text", "Name": "MapType", "Explanation": "" },
				{ "Type": "Text", "Name": "MapStyle", "Explanation": "" },
				{ "Type": "Boolean", "Name": "Unlocked", "Explanation": "" },
				{ "Type": "Boolean", "Name": "IsPlayable", "Explanation": "" },
				{ "Type": "Boolean", "Name": "CreatedWithSimpleEditor", "Explanation": "" },
				{ "Type": "Boolean", "Name": "CreatedWithPartyEditor", "Explanation": "" },
				{ "Type": "Integer", "Name": "TMObjective_AuthorTime", "Explanation": "" },
				{ "Type": "Integer", "Name": "TMObjective_GoldTime", "Explanation": "" },
				{ "Type": "Integer", "Name": "TMObjective_SilverTime", "Explanation": "" },
				{ "Type": "Integer", "Name": "TMObjective_BronzeTime", "Explanation": "" },
				{ "Type": "Integer", "Name": "TMObjective_NbLaps", "Explanation": "" },
				{ "Type": "Boolean", "Name": "TMObjective_IsLapRace", "Explanation": "" },
				{ "Type": "Text", "Name": "Name", "Explanation": "" },
				{ "Type": "Text", "Name": "Path", "Explanation": "" },
				{ "Type": "Text", "Name": "FileName", "Explanation": "" }
			]
		},
		"Boolean": {
			"Explanation": "Standard ManiaScript structure that defines condition."
		},
		"Integer": {
			"Explanation": "Standard ManiaScript structure that defines 32bit number with no decimal point."
		},
		"Real": {
			"Explanation": "Standard ManiaScript structure that defines floating number with decimal point."
		},
		"Text": {
			"Explanation": "Standard ManiaScript structure that defines text as a string of characters."
		},
		"Vec2": {
			"Explanation": "Standard ManiaScript structure that two dimensional vector."
		},
		"Vec3": {
			"Explanation": "Standard ManiaScript structure that three dimensional vector."
		},
		"Int3": {
			"Explanation": "Standard ManiaScript structure that three dimensional integer."
		},
		"Void": {
			"Explanation": "Nothingness."
		}
	},
	"Globals": [
		{
			"Type": "SChMetadata",
			"Name": "Script",
 			"Explanation": "Global defining ManiaScript information."
		},
		{
			"Type": "SChProblem",
			"Array": true,
			"Name": "Problems",
 			"Explanation": "List of problems that the Modifier has found. You shouldn't modify this variable yourself unless you want to create some kind of effect (for example adding a problem without pausing the modification)."
		},
		{
			"Type": "Integer",
			"Name": "RandomProgression",
 			"Explanation": "How many times the random function was called. This variable is used internally to modify randomizer seed."
		},
		{
			"Type": "Integer",
			"Name": "RandomSeed",
 			"Explanation": "Randomizer seed defined by the map copper size."
		},
		{
			"Type": "SChProblem",
			"Name": "Solver_Problem",
 			"Explanation": "Usable only in Solver. The problem user has selected."
		},
		{
			"Type": "Integer",
			"Name": "Solver_ProblemId",
			"Supported": false,
 			"Explanation": ""
		},
		{
			"Type": "Integer",
			"Name": "Solver_Solution",
 			"Explanation": "Usable only in Solver. The solution ID user has selected."
		},
		{
			"Type": "Integer",
			"Name": "Solver_Point",
 			"Explanation": "Usable only in Solver. Index of the pointed object by the user. Used often together with Solver_Problem."
		},
		{
			"Type": "Boolean",
			"Name": "Solver_Success",
 			"Explanation": "Usable only in Solver. Lets Solver know that the solution has executed successfully."
		}
	],
	"Functions": {
		"Request": [
			{
				"Return": "SResponse",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "Requests Modifier to do an action. Base of all of the Challenge API functions.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_Command",
 							"Explanation": "Command to call."
						},
						{
							"Type": "Text",
							"Array": true,
							"Name": "_Arguments",
 							"Explanation": "Text arguments to pass for this command."
						}
					]
				]
			}
		],
		"ComputeShadows": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Computes Very Fast shadows.",
				"Supported": true,
				"Parameters": []
			}
		],
		"RemoveAllBlocks": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Removes all blocks from the map.",
				"Supported": true,
				"Parameters": []
			}
		],
		"RemoveAllTerrain": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Removes entire terrain from the map.",
				"Supported": true,
				"Parameters": []
			}
		],
		"RemoveAllOffZone": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Removes all offzone on the map.",
				"Supported": true,
				"Parameters": []
			}
		],
		"RemoveAllObjects": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Removes all objects from the map.",
				"Supported": true,
				"Parameters": []
			}
		],
		"RemoveAll": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Removes everything from the map.",
				"Supported": true,
				"Parameters": []
			}
		],
		"RemoveAllBlocksAndTerrain": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Removes all blocks and terrain from the map.",
				"Supported": true,
				"Parameters": []
			}
		],
		"PreloadAllBlocks": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Preloads all blocks for possibly smoother modification. This function is actually called in the internal code when Modifier starts.",
				"Supported": true,
				"Parameters": []
			}
		],
		"PreloadAllItems": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Preloads all items for possibly smoother modification.",
				"Supported": true,
				"Parameters": []
			}
		],
		"CanPlaceBlock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "If it's possible to place a block on this position.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the block."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the block."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the block."
						},
						{
							"Type": "Boolean",
							"Name": "_OnGround",
 							"Explanation": ""
						},
						{
							"Type": "Integer",
							"Name": "_VariantIndex",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"CanPlaceBlock_NoDestruction": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": ""
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": ""
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": ""
						},
						{
							"Type": "Boolean",
							"Name": "_OnGround",
 							"Explanation": ""
						},
						{
							"Type": "Integer",
							"Name": "_VariantIndex",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"PlaceBlock": [
			{
				"Return": "SPlaceBlockResult",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Places a block in a solid format (the block will block other blocks from placing). Returns if the placement was successful and the placed block parameters.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the block."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the block."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the block."
						}
					]
				]
			}
		],
		"PlaceBlock_NoDestruction": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": ""
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": ""
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"CanPlaceRoadBlocks": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "If you can place a road type with the provided parameters.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the block."
						},
						{
							"Type": "Int3",
							"Name": "_StartCoord",
 							"Explanation": "Start coordination of the path."
						},
						{
							"Type": "Int3",
							"Name": "_EndCoord",
 							"Explanation": "End coordination of the path."
						}
					]
				]
			}
		],
		"PlaceRoadBlocks": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Places road path in a solid format (the placed road will block other blocks from placing).",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the block."
						},
						{
							"Type": "Int3",
							"Name": "_StartCoord",
 							"Explanation": "Start coordination of the path."
						},
						{
							"Type": "Int3",
							"Name": "_EndCoord",
 							"Explanation": "End coordination of the path."
						}
					]
				]
			}
		],
		"CanPlaceTerrainBlocks": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Places terrain in a proper format by provided parameters.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the terrain block."
						},
						{
							"Type": "Int3",
							"Name": "_StartCoord",
 							"Explanation": "Start coordination of the terrain."
						},
						{
							"Type": "Int3",
							"Name": "_EndCoord",
 							"Explanation": "End coordination of the terrain."
						}
					]
				]
			}
		],
		"PlaceTerrainBlocks": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Places terrain.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the terrain block."
						},
						{
							"Type": "Int3",
							"Name": "_StartCoord",
 							"Explanation": "Start coordination of the terrain."
						},
						{
							"Type": "Int3",
							"Name": "_EndCoord",
 							"Explanation": "End coordination of the terrain."
						}
					]
				]
			}
		],
		"PlaceTerrainBlocks_NoDestruction": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": ""
						},
						{
							"Type": "Int3",
							"Name": "_StartCoord",
 							"Explanation": ""
						},
						{
							"Type": "Int3",
							"Name": "_EndCoord",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"CanPlaceMacroblock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Checks if you can place a macroblock under the provided parameters.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_MacroblockName",
 							"Explanation": "Name (or file name) of the macroblock."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the macroblock."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the macroblock."
						}
					]
				]
			}
		],
		"PlaceMacroblock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Places a macroblock on the map.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_MacroblockName",
 							"Explanation": "Name (or file name) of the macroblock"
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the macroblock."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the macroblock."
						}
					]
				]
			}
		],
		"CanPlaceMacroblock_NoDestruction": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_MacroblockName",
 							"Explanation": "Name (or file name) of the macroblock."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the macroblock."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the macroblock."
						}
					]
				]
			}
		],
		"PlaceMacroblock_NoDestruction": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_MacroblockName",
 							"Explanation": "Name (or file name) of the macroblock."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the macroblock."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the macroblock."
						}
					]
				]
			}
		],
		"CanPlaceMacroblock_NoTerrain": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_MacroblockName",
 							"Explanation": "Name (or file name) of the macroblock."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the macroblock."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the macroblock."
						}
					]
				]
			}
		],
		"PlaceMacroblock_NoTerrain": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_MacroblockName",
 							"Explanation": "Name (or file name) of the macroblock."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the macroblock."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the macroblock."
						}
					]
				]
			}
		],
		"RemoveMacroblock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Removes macroblock from the map if it is identified.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_MacroblockName",
 							"Explanation": "Name (or file name) of the macroblock."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the macroblock."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the macroblock."
						}
					]
				]
			}
		],
		"RemoveMacroblock_NoTerrain": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_MacroblockName",
 							"Explanation": "Name (or file name) of the macroblock."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the macroblock."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the macroblock."
						}
					]
				]
			}
		],
		"GetBlock": [
			{
				"Return": "SChBlock",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Detects a block on the specified coordination.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the block."
						}
					]
				]
			}
		],
		"RemoveBlock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Removes a block on the specified coordination. However, it does remove only regular blocks, it does not remove ghosts blocks. This function doesn't contain any block name and speciality checks, therefore function RemoveSpecificBlock() is more recommended.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the block."
						}
					]
				]
			}
		],
		"RemoveTerrainBlocks": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Removes terrain in specific area.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Int3",
							"Name": "_StartCoord",
 							"Explanation": "Start coordination of the area."
						},
						{
							"Type": "Int3",
							"Name": "_EndCoord",
 							"Explanation": "End coordination of the area."
						}
					]
				]
			}
		],
		"GetBlockGroundHeight": [
			{
				"Return": "Integer",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Gets block ground height from X and Z coordinates.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the block."
						},
						{
							"Type": "Integer",
							"Name": "_CoordX",
 							"Explanation": "X coordination of the block."
						},
						{
							"Type": "Integer",
							"Name": "_CoordZ",
 							"Explanation": "Z coordination of the block."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the block."
						}
					]
				]
			}
		],
		"GetGroundHeight": [
			{
				"Return": "Integer",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Gets ground height from X and Z coordinates.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Integer",
							"Name": "_CoordX",
 							"Explanation": "X coordination on the map."
						},
						{
							"Type": "Integer",
							"Name": "_CoordZ",
 							"Explanation": "Z coordination on the map."
						}
					]
				]
			}
		],
		"GetStartLineBlock": [
			{
				"Return": "SChBlock",
				"Array": false,
				"Kind": "Regular",
				"Explanation": "Gets start line or multilap if it's a block.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetBlocks": [
			{
				"Return": "SChBlock",
				"Array": true,
				"Kind": "Regular",
				"Explanation": "Gets all blocks available on the map, including terrain blocks. This function is not supported and can crash the game on big maps. Using filter alternatives is better instead, such as GetFilteredBlocks().",
				"Supported": false,
				"Parameters": []
			}
		],
		"GetPureBlocks": [
			{
				"Return": "SChBlock",
				"Array": true,
				"Kind": "Regular",
				"Explanation": "Gets all regular blocks available on the map. May sometimes crash a game on large maps.",
				"Supported": false,
				"Parameters": []
			}
		],
		"GetTerrainBlocks": [
			{
				"Return": "SChBlock",
				"Array": true,
				"Kind": "Regular",
				"Explanation": "Gets all terrain blocks available on the map. May sometimes crash a game on large maps.",
				"Supported": false,
				"Parameters": []
			}
		],
		"GetMapInfo": [
			{
				"Return": "SChMap",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Gets the map info as of calling the command - usually MapUid is empty and the map name is Unnamed. Use GetOriginalMapInfo() to get the true information about a modified map.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetOriginalMapInfo": [
			{
				"Return": "SChMap",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Gets a map info of the original map that is being modified. Returns static information unlike GetMapInfo() - use that one for current map information.",
				"Supported": true,
				"Parameters": []
			}
		],
		"Underground": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Set the view mode to underground for better underground modification view.",
				"Supported": true,
				"Parameters": []
			}
		],
		"Aboveground": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Set the view mode to a regular view.",
				"Supported": true,
				"Parameters": []
			}
		],
		"PlaceGhostBlock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Places a block as a ghost block. This function is currently only supported for Canyon, Stadium, Valley and Lagoon waypoints.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the block."
						},
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": "Coordination of the block."
						},
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": "Direction of the block."
						}
					]
				]
			}
		],
		"ReplaceBlock": [
			{
				"Return": "SReplacementResult",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Replaces a block with another block.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChBlock",
							"Name": "_Block",
 							"Explanation": "Block to replace."
						},
						{
							"Type": "Text",
							"Name": "_ReplacementBlockName",
 							"Explanation": "Block name as replacement (to be replaced with)."
						},
						{
							"Type": "Boolean",
							"Name": "_OppositeDirection",
 							"Explanation": "If the block should be placed in an opposite direction."
						}
					],
					[
						{
							"Type": "SChBlock",
							"Name": "_Block",
 							"Explanation": "Block to replace."
						},
						{
							"Type": "Text",
							"Name": "_ReplacementBlockName",
 							"Explanation": "Block name as replacement (to be replaced with)."
						}
					]
				]
			}
		],
		"ReplaceAllBlocks": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Replace all blocks with specified name with a different block.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the block."
						},
						{
							"Type": "Text",
							"Name": "_ReplacementBlockName",
 							"Explanation": "Block name as replacement (to be replaced with)."
						}
					]
				]
			}
		],
		"SwapBlock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Swaps a block with another block.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChBlock",
							"Name": "_Block1",
 							"Explanation": "Block 1 to swap with Block 2."
						},
						{
							"Type": "SChBlock",
							"Name": "_Block2",
 							"Explanation": "Block 2 to swap with Block 1."
						}
					]
				]
			}
		],
		"GetStartLines": [
			{
				"Return": "SChWaypoint",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all start lines the map has (can be blocks or items). Can return empty array if map is multilap. As of current Trackmania rules, the function shouldn't return more than one placeable.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetFinishLines": [
			{
				"Return": "SChWaypoint",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all finish lines the map has (can be blocks or items). Can return empty array if map is multilap without finishes.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetCheckpoints": [
			{
				"Return": "SChWaypoint",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all checkpoints the map has (can be blocks or items).",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetMultilaps": [
			{
				"Return": "SChWaypoint",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all multilaps the map has (can be blocks or items). As of current Trackmania rules, the function shouldn't return more than one placeable.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetStartLineBlocks": [
			{
				"Return": "SChBlock",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all start line blocks the map has. As of current Trackmania rules, the function shouldn't return more than one block.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetFinishLineBlocks": [
			{
				"Return": "SChBlock",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all finish line blocks the map has.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetCheckpointBlocks": [
			{
				"Return": "SChBlock",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all checkpoint blocks the map has.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetMultilapBlocks": [
			{
				"Return": "SChBlock",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all multilap blocks the map has. As of current Trackmania rules, the function shouldn't return more than one block.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetStartLineItems": [
			{
				"Return": "SChItem",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all start line items the map has. As of current Trackmania rules, the function shouldn't return more than one item.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetFinishLineItems": [
			{
				"Return": "SChItem",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all finish line items the map has.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetCheckpointItems": [
			{
				"Return": "SChItem",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all checkpoint items the map has.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetMultilapItems": [
			{
				"Return": "SChItem",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Gets all multilap items the map has. As of current Trackmania rules, the function shouldn't return more than one item.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetFilteredBlocks": [
			{
				"Return": "SChBlock",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"MultipleBlocks": [
			{
				"Return": "SChBlock",
				"Array": true,
				"Kind": "Extensive",
				"Explanation": "Checks how many blocks are located at one coordinate. Usable for checking ghost blocks.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Int3",
							"Name": "_Coord",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"UpdateAnchor": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Updates/saves the SChAnchor information to the real anchor on the map.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChAnchor",
							"Name": "_Anchor",
 							"Explanation": "Anchor with information to save."
						}
					]
				]
			}
		],
		"LinkCheckpoints": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Links the chosen checkpoints together (so when you pass one, you pass all of them).",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChAnchor",
							"Array": true,
							"Name": "_Checkpoints",
 							"Explanation": "Checkpoint anchor array to link."
						}
					]
				]
			}
		],
		"IsSpecialBlock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Checks if the block name is recognized as special (constructed from multiple subblocks).",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the block"
						}
					]
				]
			}
		],
		"DisableWaypoint": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Disables a waypoint so its trigger is inactive. Currently only supported on most of the finish blocks.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChWaypoint",
							"Name": "_Waypoint",
 							"Explanation": "Waypoint to disable"
						}
					]
				]
			}
		],
		"RemoveSpecificBlock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Removes block from more precise information. Contains block name and special block checks. Prefer using this function over RemoveBlock() for map safety.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChBlock",
							"Name": "_Block",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"Exists": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Checks if the block does really exist on the map.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChBlock",
							"Name": "_Block",
 							"Explanation": "Block to be checked"
						}
					],
					[
						{
							"Type": "SChItem",
							"Name": "_Item",
 							"Explanation": "Item to be checked"
						}
					]
				]
			}
		],
		"ExistsInRadius": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Checks if the block does really exist on the map within certain range.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChBlock",
							"Name": "_Block",
 							"Explanation": "Block to be checked"
						},
						{
							"Type": "Real",
							"Name": "_Radius",
 							"Explanation": "Radius in units which will accept the block"
						}
					],
					[
						{
							"Type": "SChItem",
							"Name": "_Item",
 							"Explanation": "Item to be checked"
						},
						{
							"Type": "Real",
							"Name": "_Radius",
 							"Explanation": "Radius in units which will accept the block"
						}
					],
					[
						{
							"Type": "SChBlock",
							"Name": "_Block",
 							"Explanation": "Block to be checked"
						},
						{
							"Type": "Integer",
							"Name": "_Radius",
 							"Explanation": "Radius in units which will accept the block"
						}
					],
					[
						{
							"Type": "SChItem",
							"Name": "_Item",
 							"Explanation": "Item to be checked"
						},
						{
							"Type": "Integer",
							"Name": "_Radius",
 							"Explanation": "Radius in units which will accept the block"
						}
					]
				]
			}
		],
		"Random": [
			{
				"Return": "Integer",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Random Integer generator giving random but same results depending on the original map copper size.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Integer",
							"Name": "_Min",
 							"Explanation": "Minimum number."
						},
						{
							"Type": "Integer",
							"Name": "_Max",
 							"Explanation": "Maximum number."
						}
					],
					[
						{
							"Type": "Integer",
							"Name": "_Max",
 							"Explanation": "Maximum number."
						}
					]
				]
			},
			{
				"Return": "Real",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Random Real generator giving random but same results depending on the original map copper size.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Real",
							"Name": "_Min",
 							"Explanation": "Minimum number."
						},
						{
							"Type": "Real",
							"Name": "_Max",
 							"Explanation": "Maximum number."
						}
					],
					[
						{
							"Type": "Real",
							"Name": "_Max",
 							"Explanation": "Maximum number."
						}
					]
				]
			},
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Random Boolean generator giving random but same results depending on the original map copper size.",
				"Supported": true,
				"Parameters": []
			}
		],
		"Percentage": [
			{
				"Return": "Real",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Random percentage number generator giving random but same results depending on the original map copper size.",
				"Supported": true,
				"Parameters": []
			}
		],
		"Chance": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Returns True if the chance result was under the chosen percentage, otherwise False. Gives same results depending on the original map copper size.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Real",
							"Name": "_Percentage",
 							"Explanation": "Luck percentage."
						}
					]
				]
			}
		],
		"Message": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Sends a message that doesn't block the code to the user interface.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_Message",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"OppositeDirection": [
			{
				"Return": "Text",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Gives opposite direction of the provided direction. Unknown direction returns North.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"ClockwiseDirection": [
			{
				"Return": "Text",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Gives next direction clockwise of the provided direction. Unknown direction returns North.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": ""
						},
						{
							"Type": "Integer",
							"Name": "_Amount",
 							"Explanation": "Amount of times to change the direction."
						}
					],
					[
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"CounterClockwiseDirection": [
			{
				"Return": "Text",
				"Array": false,
				"Kind": "Extensive",
				"Explanation": "Gives next direction counter clockwise of the provided direction. Unknown direction returns North.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": ""
						},
						{
							"Type": "Integer",
							"Name": "_Amount",
 							"Explanation": ""
						}
					],
					[
						{
							"Type": "Text",
							"Name": "_Direction",
 							"Explanation": ""
						}
					]
				]
			}
		],

		"SetStatusProgress": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Appearance",
				"Explanation": "Sets Modifier Status progress bar.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Real",
							"Name": "_Progress",
 							"Explanation": "Amount of progress in percentage."
						}
					]
				]
			}
		],
		"SetStatusMessage": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Appearance",
				"Explanation": "Sets Modifier Status main message.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_Message",
 							"Explanation": "Message to display."
						}
					]
				]
			}
		],
		"SetStatusStage": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Appearance",
				"Explanation": "Sets Modifier Status stage (analyzing, modifying...).",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_Stage",
 							"Explanation": "Stage to display."
						}
					]
				]
			}
		],
		"SetStatusColor": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Appearance",
				"Explanation": "Sets Modifier Status progress bar color.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Vec3",
							"Name": "_Color",
 							"Explanation": "Color of the progress bar."
						}
					]
				]
			}
		],
		"Focus": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Appearance",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChBlock",
							"Name": "_Block",
 							"Explanation": ""
						}
					]
				]
			},
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Appearance",
				"Explanation": "",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Vec3",
							"Name": "_Position",
 							"Explanation": ""
						}
					]
				]
			}
		],

		"Complete": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "This function shouldn't be normally called in modifier script.",
				"Supported": true,
				"Parameters": []
			}
		],
		"Solve": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "",
				"Supported": false,
				"Parameters": []
			}
		],
		"Problem": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "Creates a notified problem (Modifier Status will provide information to user interface)",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "SChProblem",
							"Name": "_Problem",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"Note": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "",
				"Supported": false,
				"Parameters": [
					[
						{
							"Type": "SChNote",
							"Name": "_Note",
 							"Explanation": ""
						}
					]
				]
			}
		],
		"Solution": [
			{
				"Return": "SChSolution",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "Function used for one-line definition of solution.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_Value",
 							"Explanation": "Brief solution explanation."
						},
						{
							"Type": "Text",
							"Name": "_AdditionalInfo",
 							"Explanation": "More useful info about the solution."
						},
						{
							"Type": "Boolean",
							"Name": "_IsInteractive",
 							"Explanation": "If you can click and perform the automated solution."
						}
					]
				]
			}
		],
		"Chill": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "Gives the Modifier a little break. Waits 10-50ms depending on your PC.",
				"Supported": true,
				"Parameters": []
			}
		],
		"ShowEditor": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "Shows map editor user interface. Not safe and should be used wisely.",
				"Supported": true,
				"Parameters": []
			}
		],
		"HideEditor": [
			{
				"Return": "Void",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "Hides map editor user interface.",
				"Supported": true,
				"Parameters": []
			}
		],
		"Event_MapModified": [
			{
				"Return": "Text",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "Returns block name once if the map was modified, otherwise empty string. Call this function in a loop for effectiveness.",
				"Supported": true,
				"Parameters": []
			}
		],
		"SetCursorBlock": [
			{
				"Return": "Boolean",
				"Array": false,
				"Kind": "Technical",
				"Explanation": "Sets cursor block to the defined block name.",
				"Supported": true,
				"Parameters": [
					[
						{
							"Type": "Text",
							"Name": "_BlockName",
 							"Explanation": "Name of the block."
						}
					]
				]
			}
		],
		"GetRelation_StartFinish": [
			{
				"Return": "SChRelationBlock[][]",
				"Array": true,
				"ArrayType": "Text",
				"Kind": "Technical",
				"Explanation": "Gets relation set for the starts and finishes.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetRelation_StartMultilap": [
			{
				"Return": "SChRelationBlock[][]",
				"Array": true,
				"ArrayType": "Text",
				"Kind": "Technical",
				"Explanation": "Gets relation set for the starts and multilaps.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetRelation_FinishCheckpoint": [
			{
				"Return": "SChRelationBlock[][]",
				"Array": true,
				"ArrayType": "Text",
				"Kind": "Technical",
				"Explanation": "Gets relation set for the finishes and checkpoints.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetRelation_MultilapStartTwoway": [
			{
				"Return": "SChRelationBlock[][]",
				"Array": true,
				"ArrayType": "Text",
				"Kind": "Technical",
				"Explanation": "Gets relation set for the multilaps and start-twoways.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetRelation_StartTwowayFinishTwoway": [
			{
				"Return": "SChRelationBlock[][]",
				"Array": true,
				"ArrayType": "Text",
				"Kind": "Technical",
				"Explanation": "Gets relation set for the start-twoways and finish-twoways.",
				"Supported": true,
				"Parameters": []
			}
		],
		"GetRelation_CheckpointRoad": [
			{
				"Return": "SChRelationBlock[][]",
				"Array": true,
				"ArrayType": "Text",
				"Kind": "Technical",
				"Explanation": "Gets relation set for the checkpoints and roads.",
				"Supported": true,
				"Parameters": []
			}
		]
	}
}