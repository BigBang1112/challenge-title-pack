#Struct SPublicMap {
	Boolean Public;
	Boolean IsNadeoMap;
	Text Name;
	Text Uid;
	Text Author;
	Text OriginalName;
	Text OriginalUid;
	Text OriginalAuthor;
}

#Struct SUser {
	Text Login;
	Text Nickname;
}

***Start***
***
declare SPublicMap PublicMap;
declare Integer PreviousCount;
declare Integer EndOfYellow = -1;
***

***Loop***
***
foreach(Event,PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::MouseOver: {
			switch(Event.ControlId) {
				case "LABEL_COUNT": {
					if(PreviousCount > 0)
						Page.GetFirstChild("FRAME_TOOLTIP").Show();
				}
			}
		}
		case CMlScriptEvent::Type::MouseOut: {
			switch(Event.ControlId) {
				case "LABEL_COUNT": {
					Page.GetFirstChild("FRAME_TOOLTIP").Hide();
				}
			}
		}
		case CMlScriptEvent::Type::MouseClick: {
			switch(Event.ControlId) {
				case "QUAD_BUTTON_PUBLISH": {
					PlayAudio(Sound_Click);
					SendCustomEvent("PublishMap", []);
				}
				case "QUAD_BUTTON_CHAT": {
					PlayAudio(Sound_ClickSoft);

					if(Page.GetFirstChild("FRAME_CHAT_WINDOW").DataAttributeGet("open") == "1") {
						AnimMgr.Add(Page.GetFirstChild("FRAME_CHAT_WINDOW"), "<frame pos=\"0 -60\" hidden=\"1\"/>", 300, CAnimManager::EAnimManagerEasing::QuadOut);
						Page.GetFirstChild("FRAME_CHAT_WINDOW").DataAttributeSet("open","0");
					}
					else {
						AnimMgr.Add(Page.GetFirstChild("FRAME_CHAT_WINDOW"), "<frame pos=\"0 0\" hidden=\"0\"/>", 300, CAnimManager::EAnimManagerEasing::QuadOut);
						Page.GetFirstChild("FRAME_CHAT_WINDOW").DataAttributeSet("open","1");
					}
				}
			}
		}
		case CMlScriptEvent::Type::PluginCustomEvent: {
			switch(Event.CustomEventType) {
				case "Public": {
					declare JsonSuccess = PublicMap.fromjson(Event.CustomEventData[0]);
					(Page.GetFirstChild("LABEL_MAPNAME") as CMlLabel).SetText(PublicMap.OriginalName);

					Page.GetFirstChild("FRAME_UNPUBLISHED").Hide();
					Page.GetFirstChild("FRAME_PUBLISHED").Show();
					(Page.GetFirstChild("LABEL_COUNT") as CMlLabel).SetText("-");
					PreviousCount = -1;
				}
				case "Private": {
					Page.GetFirstChild("FRAME_UNPUBLISHED").Show();
					Page.GetFirstChild("FRAME_PUBLISHED").Hide();
				}
				case "Count": {
					declare Count = TextLib::ToInteger(Event.CustomEventData[0]);

					if(Count != PreviousCount) {
						(Page.GetFirstChild("LABEL_COUNT") as CMlLabel).TextColor = <1., 1., 0.>;
						Page.GetFirstChild("LABEL_COUNT").RelativeScale = 1.05;
						AnimMgr.Add(Page.GetFirstChild("LABEL_COUNT"), "<label textcolor=\"FFF\" scale=\"1\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
						EndOfYellow = Now+500;
						PlayAudio(Sound_NumberChange);
					}

					if(Count < 0) {
						(Page.GetFirstChild("LABEL_COUNT") as CMlLabel).SetText("-");
					}
					else {
						(Page.GetFirstChild("LABEL_COUNT") as CMlLabel).SetText(Count^"");
					}
					PreviousCount = Count;
				}
				case "Users": {
					declare Label_Tooltip = (Page.GetFirstChild("LABEL_TOOLTIP") as CMlLabel);
					declare Quad_Tooltip = (Page.GetFirstChild("QUAD_TOOLTIP") as CMlQuad);

					declare SUser[] Users;
					declare JsonSuccess = Users.fromjson(Event.CustomEventData[0]);
					declare UserText = "";
					if(Users.count > 10) UserText = "and "^Users.count-10^" more...";
					for(I,0,9) {
						if(Users.existskey(I)) {
							if(Users[I].Nickname == "")
								UserText ^= "\n$z"^Users[I].Login;
							else
								UserText ^= "\n$z"^Users[I].Nickname;
						}
					}
					Label_Tooltip.SetText(UserText);
					declare Width = Label_Tooltip.ComputeWidth(UserText);
					Label_Tooltip.Size.X = Width+2.;
					declare Height = Label_Tooltip.ComputeHeight(UserText);
					Label_Tooltip.Size.Y = Height;
					Quad_Tooltip.Size = <Width+4., Height>;
					if(Users.count > 10) Quad_Tooltip.Size.Y += 3.;
				}
				case "DisablePublish": {
					(Page.GetFirstChild("QUAD_BUTTON_PUBLISH_DISABLE") as CMlQuad).Show();
					(Page.GetFirstChild("QUAD_BUTTON_PUBLISH") as CMlQuad).ModulateColor = <.2, .4, .2>;
					(Page.GetFirstChild("LABEL_BUTTON_PUBLISH") as CMlLabel).TextColor = <.5, .5, .5>;
				}
			}
		}
	}
}

if(EndOfYellow != -1 && EndOfYellow < Now) {
	(Page.GetFirstChild("LABEL_COUNT") as CMlLabel).TextColor = <1., 1., 1.>;
	Page.GetFirstChild("LABEL_COUNT").RelativeScale = 1.;
}

if(Page.GetFirstChild("FRAME_TOOLTIP").Visible) Page.GetFirstChild("FRAME_TOOLTIP").RelativePosition_V3 = <MouseX, MouseY>;
***
