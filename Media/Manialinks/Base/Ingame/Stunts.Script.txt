#Struct SStunt {
	Integer Timestamp;
	Integer Points;
	Text Figure;
	Integer Angle;
	Integer RaceTime;
	Integer Quality;
}

CTmMlPlayer GetOwner() {
	wait(GUIPlayer != Null || InputPlayer != Null);
	if(GUIPlayer != Null) return GUIPlayer;
	return InputPlayer;
}

***Start***
***
declare Label_Points = (Page.GetFirstChild("LABEL_POINTS") as CMlLabel);
declare Label_Stunt = (Page.GetFirstChild("LABEL_STUNT") as CMlLabel);
declare Label_TimePenalty = (Page.GetFirstChild("LABEL_TIMEPENALTY") as CMlLabel);
declare Label_AddPoints = (Page.GetFirstChild("LABEL_ADDPOINTS") as CMlLabel);

declare TotalPoints = 0;
declare StuntPenalty = 0;

declare CTmMlPlayer::ERaceState PreviousRaceState;

declare metadata Integer StuntTimeLimit for Map;
***

***Loop***
***
foreach(Event,PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::MouseClick: {
			
		}
		case CMlScriptEvent::Type::PluginCustomEvent: {
			switch(Event.CustomEventType) {
				case "Start": {
					
				}
				case "Stunt": {
					declare SStunt Stunt;
					declare JsonSuccess = Stunt.fromjson(Event.CustomEventData[0]);
					
					if(Stunt.Quality > 0) {
						TotalPoints += Stunt.Points;

						if(Stunt.Angle == 0)
							Label_Stunt.SetText(Stunt.Figure);
						else
							Label_Stunt.SetText(Stunt.Figure ^ " " ^ Stunt.Angle);

						Label_Stunt.RelativeScale = .8;
						Label_Stunt.Opacity = .0;
						AnimMgr.Add(Label_Stunt, "<label scale=\"1\" opacity=\"1\"/>", 300, CAnimManager::EAnimManagerEasing::QuadOut);
						AnimMgr.Add(Label_Stunt, "<label scale=\".8\" opacity=\"0\"/>", Now + 2000, 300, CAnimManager::EAnimManagerEasing::QuadIn);
					}
					else if(Stunt.Quality == 0) TotalPoints += Stunt.Points;
					else if(Stunt.Quality < 0) {
						TotalPoints -= Stunt.Points;
						Label_Stunt.SetText(Stunt.Figure);
					}

					if(Stunt.Quality >= 0) {
						Label_AddPoints.SetText("+"^Stunt.Points^" ");
						Label_AddPoints.TextColor = <1.,1.,0.>;
					}
					if(Stunt.Quality < 0) {
						Label_AddPoints.SetText("-"^Stunt.Points^" ");
						Label_AddPoints.TextColor = <1.,0.,0.>;
					}

					AnimMgr.AddChain(Label_AddPoints, "<label opacity=\"1\" pos=\"0 5.5\"/>", 1000, CAnimManager::EAnimManagerEasing::QuadOut);
					AnimMgr.AddChain(Label_AddPoints, "<label opacity=\"0\" pos=\"0 -0.5\"/>", 500, CAnimManager::EAnimManagerEasing::QuadIn);

					Label_Points.RelativeScale = MathLib::Min(Stunt.Points, 100)/100*.2+1.2;
					AnimMgr.Add(Label_Points, "<label scale=\"1\"/>", 300, CAnimManager::EAnimManagerEasing::QuadOut);
				}
			}
		}
	}
}

if(StuntTimeLimit == 0) {
	Label_TimePenalty.SetText("-:--.--");
}
else if(GetOwner().RaceStartTime == 0) {
	Label_TimePenalty.SetText(TextLib::TimeToText(StuntTimeLimit, True));
}
else {
	declare Time = MathLib::Clamp(StuntTimeLimit-(GameTime-GetOwner().RaceStartTime),0,StuntTimeLimit);
	Label_TimePenalty.SetText(TextLib::TimeToText(Time, True));

	StuntPenalty = MathLib::Max(MathLib::FloorInteger((GameTime-GetOwner().RaceStartTime-StuntTimeLimit)/100.),0);
	if(StuntPenalty > 0) Label_Points.TextColor = <1.,.5,0.>;
	else Label_Points.TextColor = <1.,1.,1.>;
}

foreach(Event,RaceEvents) {
	switch(Event.Type) {
		case CTmRaceClientEvent::EType::Respawn: {
			if(Event.Player.CurRace.Time == -1) {
				TotalPoints = 0;
				StuntPenalty = 0;
				Label_Stunt.SetText("");
			}
		}
	}
}

if(GetOwner().RaceState != PreviousRaceState) {
	declare State = GetOwner().RaceState;
	PreviousRaceState = State;
}

Label_Points.SetText(MathLib::Max(0, TotalPoints-StuntPenalty)^"");
***
