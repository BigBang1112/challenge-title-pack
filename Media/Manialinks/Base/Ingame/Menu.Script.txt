***Start***
***
declare Frame_Label_MapName = (Page.GetFirstChild("FRAME_LABEL_MAPNAME") as CMlFrame);
declare Label_MapName = (Page.GetFirstChild("LABEL_MAPNAME") as CMlLabel);
declare Label_MapName2 = (Page.GetFirstChild("LABEL_MAPNAME_2") as CMlLabel);

declare Frame_Label_Challenge = (Page.GetFirstChild("FRAME_LABEL_CHALLENGE") as CMlFrame);
declare Label_Challenge = (Page.GetFirstChild("LABEL_CHALLENGE") as CMlLabel);
declare Label_Challenge2 = (Page.GetFirstChild("LABEL_CHALLENGE_2") as CMlLabel);

declare Frame_Label_Car = (Page.GetFirstChild("FRAME_LABEL_CAR") as CMlFrame);
declare Label_Car = (Page.GetFirstChild("LABEL_CAR") as CMlLabel);
declare Label_Car2 = (Page.GetFirstChild("LABEL_CAR_2") as CMlLabel);

declare LabelDistance = 15;

declare Boolean IsPauseMenu for Page;
declare Boolean IsMenuOpen for Page;
declare Boolean IsBlurred for Page;

EnableMenuNavigationInputs = True;

ShowInGameMenu();
***

***Loop***
***
foreach(Event,PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::MouseClick: {
			switch(Event.ControlId) {
				case "QUAD_BUTTON_START": {
					SendCustomEvent("Start", ["True"]);

					CloseInGameMenu(CMlScriptIngame::EInGameMenuResult::Resume);
				}
				case "QUAD_BUTTON_EXIT": {
					CloseInGameMenu(CMlScriptIngame::EInGameMenuResult::Quit);
					Playground.QuitServer(False);
				}
			}
		}
		case CMlScriptEvent::Type::PluginCustomEvent: {
			switch(Event.CustomEventType) {
				case "MapName": {
					declare MapName = Event.CustomEventData[0];
					SlideText_Set(Label_MapName, Label_MapName2, MapName, LabelDistance);
				}
				case "Challenge": {
					declare Challenge = Event.CustomEventData[0];
					SlideText_Set(Label_Challenge, Label_Challenge2, Challenge, LabelDistance);
				}
				case "Car": {
					declare Car = Event.CustomEventData[0];
					SlideText_Set(Label_Car, Label_Car2, Car, LabelDistance);
				}
			}
		}
		case CMlEvent::Type::MenuNavigation: {
			switch(Event.MenuNavAction) {
				case CMlEvent::EMenuNavAction::Cancel: {
					CloseInGameMenu(CMlScriptIngame::EInGameMenuResult::Resume);
				}
			}
		}
	}
}

if(IsMenuOpen != IsMenuNavigationForeground) {
	IsMenuOpen = IsMenuNavigationForeground;
	if(IsMenuOpen) SendCustomEvent("Open", []);
	else {
		SendCustomEvent("Close", []);
		SendCustomEvent("Start", ["False"]);
	}
}

if(IsBlurred) Page.GetFirstChild("QUAD_BACKGROUND").Show();
else Page.GetFirstChild("QUAD_BACKGROUND").Hide();

SlideText_Loop(Frame_Label_MapName, Label_MapName, Label_MapName2, LabelDistance, .015);
SlideText_Loop(Frame_Label_Challenge, Label_Challenge, Label_Challenge2, LabelDistance, -.015);
SlideText_Loop(Frame_Label_Car, Label_Car, Label_Car2, LabelDistance, -.015);
***