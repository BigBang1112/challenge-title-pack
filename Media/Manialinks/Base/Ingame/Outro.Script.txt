#Struct SFinish {
	Integer Timestamp;
	Integer Time;
	Integer[] Checkpoints;
	Real Distance;
	Integer Stunts;
}

#Struct SPerformance {
	Text Vehicle;
	Integer BestFinishIndex;
	SFinish[] Finishes;
}

#Struct SSkin {
	Text File;
	Text Icon;
}

#Struct SVehicle {
	Text Name;
	Text Image;
	Text File;
	SSkin[] Skins;
}

CTmMlPlayer GetOwner() {
	wait(GUIPlayer != Null || InputPlayer != Null);
	if(GUIPlayer != Null) return GUIPlayer;
	return InputPlayer;
}

Void SaveReplay() {
	declare netread SVehicle[] Server_Vehicles for UI;
	declare netread Integer Server_CurrentVehicle for UI;
	declare netread SPerformance[Text] Performances for GetOwner().Score;

	declare VehicleName = Server_Vehicles[Server_CurrentVehicle].Name;
	declare Performance = Performances[VehicleName];
	declare ThisFinish = Performance.Finishes[Performance.Finishes.count-1];

	SendCustomEvent("SaveReplay", [ThisFinish.Time^""]);
}

***Start***
***
EnableMenuNavigationInputs = True;

declare Quad_Button_Exit = (Page.GetFirstChild("QUAD_BUTTON_EXIT") as CMlQuad);
declare Quad_Button_Continue = (Page.GetFirstChild("QUAD_BUTTON_CONTINUE") as CMlQuad);
declare Quad_Button_SaveReplay = (Page.GetFirstChild("QUAD_BUTTON_SAVEREPLAY") as CMlQuad);

FirstNav = Quad_Button_Continue;

declare SNavControl Button_Exit;
Button_Exit.Right = Quad_Button_Continue;
NavControls[Quad_Button_Exit] = Button_Exit;

declare SNavControl Button_Continue;
Button_Continue.Left = Quad_Button_Exit;
Button_Continue.Right = Quad_Button_SaveReplay;
NavControls[Quad_Button_Continue] = Button_Continue;

declare SNavControl Button_SaveReplay;
Button_SaveReplay.Left = Quad_Button_Continue;
NavControls[Quad_Button_SaveReplay] = Button_SaveReplay;

Select(FirstNav);
***

***Loop***
***
foreach(Event,PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::MouseClick: {
			switch(Event.ControlId) {
				case "QUAD_BUTTON_CONTINUE": {
					PlayAudio(Sound_Click);
					SendCustomEvent("Continue", []);
				}
				case "QUAD_BUTTON_EXIT": {
					PlayAudio(Sound_Click);
					SendCustomEvent("Exit", []);
				}
				case "QUAD_BUTTON_SAVEREPLAY": {
					PlayAudio(Sound_Click);

					SaveReplay();
				}
			}
		}
		case CMlScriptEvent::Type::MouseOver: {
			if(Event.Control is CMlQuad) {
				Select(Null);
			}
		}
		case CMlScriptEvent::Type::PluginCustomEvent: {
			switch(Event.CustomEventType) {
				case "Navigation": {
					EnableMenuNavigationInputs = Event.CustomEventData[0] == "True";
					if(EnableMenuNavigationInputs) Select(FirstNav);
				}
			}
		}
		case CMlScriptEvent::Type::MenuNavigation: {
			switch(Event.MenuNavAction) {
				case CMlScriptEvent::EMenuNavAction::Select: {
					if(SelectedNav != Null) {
						if(SelectedNav.ControlId == "QUAD_BUTTON_CONTINUE") SendCustomEvent("Continue", []);
						else if(SelectedNav.ControlId == "QUAD_BUTTON_EXIT") SendCustomEvent("Exit", []);
						else if(SelectedNav.ControlId == "QUAD_BUTTON_SAVEREPLAY") SaveReplay();
					}
				}
				case CMlScriptEvent::EMenuNavAction::Up: {
					if(SelectedNav != Null) {
						if(NavControls[SelectedNav].Up != Null)
							Select(NavControls[SelectedNav].Up);
					}
					else {
						Select(FirstNav);
					}
				}
				case CMlScriptEvent::EMenuNavAction::Down: {
					if(SelectedNav != Null) {
						if(NavControls[SelectedNav].Down != Null)
							Select(NavControls[SelectedNav].Down);
					}
					else {
						Select(FirstNav);
					}
				}
				case CMlScriptEvent::EMenuNavAction::Left: {
					if(SelectedNav != Null) {
						if(NavControls[SelectedNav].Left != Null)
							Select(NavControls[SelectedNav].Left);
					}
					else {
						Select(FirstNav);
					}
				}
				case CMlScriptEvent::EMenuNavAction::Right: {
					if(SelectedNav != Null) {
						if(NavControls[SelectedNav].Right != Null)
							Select(NavControls[SelectedNav].Right);
					}
					else {
						Select(FirstNav);
					}
				}
			}
		}
	}
}
***
