#Struct SChMetadata {
	Text Name;
	Text AuthorLogin;
	Text AuthorNickname;
	Text Description;
	Text CompatibleCollections;
}

***Start***
***
declare Frame_Background = (Page.GetFirstChild("FRAME_BACKGROUND") as CMlFrame);
declare Frame_Inner = (Page.GetFirstChild("FRAME_BACKGROUND") as CMlFrame);
declare Start = -1;
declare End = -1;
***

***Loop***
***
foreach(Event,PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::PluginCustomEvent: {
			switch(Event.CustomEventType) {
				case "Metadata": {
					declare SChMetadata Metadata;
					declare JsonSuccess = Metadata.fromjson(Event.CustomEventData[0]);
					(Page.GetFirstChild("LABEL_NAME") as CMlLabel).SetText(Metadata.Name);
					(Page.GetFirstChild("LABEL_AUTHOR") as CMlLabel).SetText(Metadata.AuthorLogin);
					(Page.GetFirstChild("LABEL_DESCRIPTION") as CMlLabel).SetText(Metadata.Description);
				}
				case "Show": {
					Start = Now;
					End = -1;
					foreach(Control,Frame_Background.Controls) {
						declare Quad = (Control as CMlQuad);
						Quad.Size.X = 2.0;
						AnimMgr.Add(Quad, "<quad size=\"60 40\"/>", 300, CAnimManager::EAnimManagerEasing::QuadOut);
					}
				}
				case "Hide": {
					Start = -1;
					End = Now;
					foreach(Control,Frame_Background.Controls) {
						declare Quad = (Control as CMlQuad);
						AnimMgr.Add(Quad, "<quad size=\"2 40\"/>", 300, CAnimManager::EAnimManagerEasing::QuadOut);
					}
				}
			}
		}
	}
}

if(End == -1) {
	(Page.GetFirstChild("FRAME_INNER") as CMlFrame).ClipWindowSize.X = AnimLib::EaseOutQuad(Now - Start, 4.0, 120.0-4, 300);
}
else {
	(Page.GetFirstChild("FRAME_INNER") as CMlFrame).ClipWindowSize.X = AnimLib::EaseOutQuad(Now - End, 120.0-4, -120.0, 300);
	if(Now - End > 300) {
		End = -1;
		SendCustomEvent("Hide_Response", []);
	}
}
***