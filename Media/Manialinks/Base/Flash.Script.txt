CTmMlPlayer GetOwner() {
	wait(GUIPlayer != Null || InputPlayer != Null);
	if(GUIPlayer != Null) return GUIPlayer;
	return InputPlayer;
}

***Start***
***
declare CollectedCheckpoints = 0;
declare LapCounter = 1;

(Page.GetFirstChild("QUAD_FLASH") as CMlQuad).Blend = CMlQuad::EBlendMode::Add;
***

***Loop***
***
foreach(Event,RaceEvents) {
	switch(Event.Type) {
		case CTmRaceClientEvent::EType::WayPoint: {
			if(Event.IsEndRace) {
				
			}
			else if(Event.IsEndLap) {
				LapCounter += 1;
				CollectedCheckpoints = 0;
			}
			else {
				CollectedCheckpoints += 1;
			}
		}
		case CTmRaceClientEvent::EType::Respawn: {
			if(Event.Player.CurRace.Time == -1) { // If fully respawned to start
				CollectedCheckpoints = 0;
				LapCounter = 1;
			}
		}
	}
}

declare ClosestFinishDistance = MathLib::Distance(MapFinishLinePos[0], GetOwner().Position);
foreach(Finish, MapFinishLinePos)
	if(ClosestFinishDistance > MathLib::Distance(Finish, GetOwner().Position))
		ClosestFinishDistance = MathLib::Distance(Finish, GetOwner().Position);

if(LapCounter == MapNbLaps && CollectedCheckpoints == MapCheckpointPos.count && ClosestFinishDistance <= 64.) {
	(Page.GetFirstChild("QUAD_FLASH") as CMlQuad).Opacity = (1-ClosestFinishDistance/64)*.25;
}
else {
	(Page.GetFirstChild("QUAD_FLASH") as CMlQuad).Opacity = 0.;
}

***