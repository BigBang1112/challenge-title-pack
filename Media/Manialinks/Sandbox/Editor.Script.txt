Void UpdateLocalScripto(Integer _SelectedScriptIndex) {
	declare persistent Text[Text] CHALLENGE_LOCAL_CODES for LocalUser;
	
	declare Frame_Scripts = (Page.GetFirstChild("FRAME_SCRIPTS") as CMlFrame);

	Page.GetFirstChild("FRAME_SCRIPT_BAR").RelativePosition_V3.Y = -CHALLENGE_LOCAL_CODES.count*10.;

	declare Counter = 0;
	foreach(Name => Script, CHALLENGE_LOCAL_CODES) {
		if(Frame_Scripts.Controls.existskey(Counter)) {
			declare Frame = (Frame_Scripts.Controls[Counter] as CMlFrame);
			declare Quad = (Frame.GetFirstChild("QUAD_SCRIPT") as CMlQuad);
			declare Entry = (Frame.GetFirstChild("ENTRY_SCRIPT") as CMlEntry);
			Frame.DataAttributeSet("name", Name);
			Entry.SetText(Name, False);
			if(_SelectedScriptIndex == Counter) {
				Quad.StyleSelected = True;
				(Page.GetFirstChild("Script") as CMlTextEdit).Value = Script;
			}
			else Quad.StyleSelected = False;
			Frame.Show();
			Counter += 1;
		}
	}
	for(I,Counter,9) {
		Frame_Scripts.Controls[I].Hide();
	}

	if(Counter == 0) {
		(Page.GetFirstChild("Script") as CMlTextEdit).Value = "";
	}

	(Page.GetFirstChild("LABEL_COUNTER") as CMlLabel).SetText(Counter^"/10");
}

***Start***
***
Page.GetClassChildren("LOADING", Page.MainFrame, True);
declare CMlControl[] Loadings;
foreach(Control,Page.GetClassChildren_Result) Loadings.add(Control);

declare Start = Now;
declare End = -1;

declare Text CHALLENGE_CODE for LocalUser;

declare SelectedScriptIndex = 0;

foreach(Control_Global,(Page.GetFirstChild("FRAME_INNER_GLOBALS") as CMlFrame).Controls) {
	declare Frame_Global = (Control_Global as CMlFrame);
	declare Offset = 0.;
	foreach(Control, Frame_Global.Controls) {
		declare Label = (Control as CMlLabel);
		Label.RelativePosition_V3.X = Offset;
		Label.Size.X = Label.ComputeWidth(Label.Value);
		Offset += Label.Size.X;
	}
}

foreach(Control_Global,(Page.GetFirstChild("FRAME_INNER_FUNCTIONS") as CMlFrame).Controls) {
	declare Frame_Global = (Control_Global as CMlFrame);
	declare Offset = 0.;
	foreach(Control, Frame_Global.Controls) {
		declare Label = (Control as CMlLabel);
		Label.RelativePosition_V3.X = Offset;
		Label.Size.X = Label.ComputeWidth(Label.Value);
		Offset += Label.Size.X;
	}
}

declare Frame_Outer_Challenge_API = (Page.GetFirstChild("FRAME_OUTER_CHALLENGE_API") as CMlFrame);
declare Quad_Challenge_API_Scroll_Area = (Page.GetFirstChild("QUAD_CHALLENGE_API_SCROLL_AREA") as CMlQuad);
Frame_Outer_Challenge_API.ScrollMax.Y = Quad_Challenge_API_Scroll_Area.Size.Y-110;

declare Quad_Scrollbar = (Page.GetFirstChild("QUAD_SCROLLBAR") as CMlQuad);
declare PreviousScroll = Frame_Outer_Challenge_API.ScrollOffset;

UpdateLocalScripto(SelectedScriptIndex);

declare persistent Text[Text] CHALLENGE_LOCAL_CODES for LocalUser;
declare RemoveMode = False;
***

***Loop***
***
foreach(Event,PendingEvents) {
	if(Event.Type == CMlScriptEvent::Type::MouseClick) {
		if(Event.ControlId == "QUAD_BUTTON_TEST") {
			CHALLENGE_CODE = (Page.GetFirstChild("Script") as CMlTextEdit).Value;
			Page.GetFirstChild("LABEL_BUTTON_TEST").Hide();
			Page.GetFirstChild("QUAD_LOADING_TEST").Show();
			SendCustomEvent("Test", []);
			PlayAudio(Sound_Click);
		}
		if(Event.ControlId == "QUAD_BUTTON_SCRIPT") {
			PlayAudio(Sound_Click);
			Page.GetFirstChild("FRAME_SCRIPTING").Show();
			Page.GetFirstChild("FRAME_DOC").Hide();
			(Page.GetFirstChild("QUAD_BUTTON_DOC") as CMlQuad).ModulateColor = <0.2,0.2,0.2>;
			(Page.GetFirstChild("QUAD_BUTTON_SCRIPT") as CMlQuad).ModulateColor = <0.0,0.2,0.4>;
		}
		if(Event.ControlId == "QUAD_BUTTON_DOC") {
			PlayAudio(Sound_Click);
			Page.GetFirstChild("FRAME_SCRIPTING").Hide();
			Page.GetFirstChild("FRAME_DOC").Show();
			(Page.GetFirstChild("QUAD_BUTTON_DOC") as CMlQuad).ModulateColor = <0.0,0.2,0.4>;
			(Page.GetFirstChild("QUAD_BUTTON_SCRIPT") as CMlQuad).ModulateColor = <0.2,0.2,0.2>;
		}
		if(Event.ControlId == "QUAD_BUTTON_PUBLISH") {
			PlayAudio(Sound_Click);
		}
		if(Event.ControlId == "BUTTON_CREATECHALLENGE_BACK") {
			if(End == -1)
			SendCustomEvent("Button_CreateChallenge_Back", []);
			PlayAudio(Sound_Click);
		}
		if(Event.ControlId == "QUAD_LIGHT") {
			declare QuadBackground = (Page.GetFirstChild("QUAD_BACKGROUND") as CMlQuad);
			declare QuadLight = (Page.GetFirstChild("QUAD_LIGHT") as CMlQuad);
			if(QuadLight.ModulateColor == <1.0,1.0,1.0>) {
				QuadLight.ModulateColor = <0.3,0.3,0.3>;
				AnimMgr.Add(QuadBackground, "<quad opacity=\"1\" />", 300, CAnimManager::EAnimManagerEasing::QuadOut);
			}
			else {
				QuadLight.ModulateColor = <1.0,1.0,1.0>;
				AnimMgr.Add(QuadBackground, "<quad opacity=\"0\" />", 300, CAnimManager::EAnimManagerEasing::QuadOut);
			}
			PlayAudio(Sound_Click);
		}
		if(Event.ControlId == "QUAD_ADD") {
			declare persistent Text[Text] CHALLENGE_LOCAL_CODES for LocalUser;
			if(CHALLENGE_LOCAL_CODES.count < 10) {
				declare Add = 1;
				while(CHALLENGE_LOCAL_CODES.existskey("Script"^CHALLENGE_LOCAL_CODES.count+Add)) Add+=1;
				CHALLENGE_LOCAL_CODES["Script"^CHALLENGE_LOCAL_CODES.count+Add] = "";

				UpdateLocalScripto(SelectedScriptIndex);
			}
			PlayAudio(Sound_Click);
		}
		if(Event.ControlId == "QUAD_REMOVE") {
			PlayAudio(Sound_Click);
			if(RemoveMode) RemoveMode = False;
			else RemoveMode = True;
		}
		if(Event.ControlId == "QUAD_SCRIPT") {
			declare persistent Text[Text] CHALLENGE_LOCAL_CODES for LocalUser;

			if(RemoveMode) {
				if(CHALLENGE_LOCAL_CODES.count > 1)
					declare Removed = CHALLENGE_LOCAL_CODES.removekey(Event.Control.Parent.DataAttributeGet("name"));
			}
			else {
				CHALLENGE_LOCAL_CODES[Event.Control.Parent.Parent.Controls[SelectedScriptIndex].DataAttributeGet("name")] = (Page.GetFirstChild("Script") as CMlTextEdit).Value;

				(Page.GetFirstChild("Script") as CMlTextEdit).Value = CHALLENGE_LOCAL_CODES[Event.Control.Parent.DataAttributeGet("name")];
			}
			
			SelectedScriptIndex = TextLib::ToInteger(Event.Control.Parent.DataAttributeGet("id"));
			UpdateLocalScripto(SelectedScriptIndex);
			PlayAudio(Sound_Click);
		}
	}
	if(Event.Type == CMlScriptEvent::Type::EntrySubmit) {
		switch(Event.ControlId) {
			case "ENTRY_SCRIPT": {
				declare ActuallySelected = TextLib::ToInteger(Event.Control.Parent.DataAttributeGet("id"));
				declare OldName = Event.Control.Parent.Parent.Controls[ActuallySelected].DataAttributeGet("name");
				declare Code = CHALLENGE_LOCAL_CODES[OldName];
				declare NewName = (Event.Control as CMlEntry).Value;
				if(CHALLENGE_LOCAL_CODES.existskey(NewName) || NewName == "") {
					(Event.Control as CMlEntry).SetText(OldName, False);
				}
				else {
					declare Removed = CHALLENGE_LOCAL_CODES.removekey(OldName);
					CHALLENGE_LOCAL_CODES[NewName] = Code;
					Event.Control.Parent.Parent.Controls[ActuallySelected].DataAttributeSet("name", NewName);
				}
				CHALLENGE_LOCAL_CODES.sortkey();
				SelectedScriptIndex = CHALLENGE_LOCAL_CODES.count-1;
				UpdateLocalScripto(SelectedScriptIndex);
			}
		}
	}
	if(Event.Type == CMlScriptEvent::Type::PluginCustomEvent) {
		switch(Event.CustomEventType) {
			case "Code_SetText": {
				if((Page.GetFirstChild("Script") as CMlTextEdit).Value == "")
					(Page.GetFirstChild("Script") as CMlTextEdit).Value = Event.CustomEventData[0];
			}
			case "Loading_End_Test": {
				Page.GetFirstChild("LABEL_BUTTON_TEST").Show();
				Page.GetFirstChild("QUAD_LOADING_TEST").Hide();
			}
			case "Show": {
				Start = Now;
				End = -1;

				Page.GetFirstChild("QUAD_FOREGROUND").Show();
				AnimMgr.Add(Page.GetFirstChild("QUAD_FOREGROUND"), "<quad hidden=\"1\" />", 500, CAnimManager::EAnimManagerEasing::Linear);

				Page.GetFirstChild("FRAME_BUTTON_SCRIPT").RelativePosition_V3 = <0.,0.>;
				(Page.GetFirstChild("QUAD_BUTTON_SCRIPT") as CMlQuad).Opacity = 0.;
				(Page.GetFirstChild("LABEL_BUTTON_SCRIPT") as CMlLabel).Opacity = 0.;
				AnimMgr.Add(Page.GetFirstChild("FRAME_BUTTON_SCRIPT"), "<frame pos=\"-55 70\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("QUAD_BUTTON_SCRIPT"), "<quad opacity=\"1\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("LABEL_BUTTON_SCRIPT"), "<label opacity=\"1\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);

				Page.GetFirstChild("FRAME_BUTTON_DOC").RelativePosition_V3 = <0.,0.>;
				(Page.GetFirstChild("QUAD_BUTTON_DOC") as CMlQuad).Opacity = 0.;
				(Page.GetFirstChild("LABEL_BUTTON_DOC") as CMlLabel).Opacity = 0.;
				AnimMgr.Add(Page.GetFirstChild("FRAME_BUTTON_DOC"), "<frame pos=\"10 70\" />", Now+100, 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("QUAD_BUTTON_DOC"), "<quad opacity=\"1\" />", Now+100, 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("LABEL_BUTTON_DOC"), "<label opacity=\"1\" />", Now+100, 500, CAnimManager::EAnimManagerEasing::QuadOut);

				Page.GetFirstChild("QUAD_LIGHT").RelativePosition_V3 = <0.,0.>;
				(Page.GetFirstChild("QUAD_LIGHT") as CMlQuad).Opacity = 0.;
				AnimMgr.Add(Page.GetFirstChild("QUAD_LIGHT"), "<quad pos=\"55 70\" />", Now+200, 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("QUAD_LIGHT"), "<quad opacity=\"1\" />", Now+200, 500, CAnimManager::EAnimManagerEasing::QuadOut);

				Page.GetFirstChild("FRAME_BUTTON_PUBLISH").RelativePosition_V3 = <0.,0.>;
				(Page.GetFirstChild("QUAD_BUTTON_PUBLISH") as CMlQuad).Opacity = 0.;
				(Page.GetFirstChild("LABEL_BUTTON_PUBLISH") as CMlLabel).Opacity = 0.;
				AnimMgr.Add(Page.GetFirstChild("FRAME_BUTTON_PUBLISH"), "<frame pos=\"90 70\" />", Now+300, 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("QUAD_BUTTON_PUBLISH"), "<quad opacity=\"1\" />", Now+300, 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("LABEL_BUTTON_PUBLISH"), "<label opacity=\"1\" />", Now+300, 500, CAnimManager::EAnimManagerEasing::QuadOut);

				Page.GetFirstChild("FRAME_BUTTON_TEST").RelativePosition_V3 = <0.,0.>;
				(Page.GetFirstChild("QUAD_BUTTON_TEST") as CMlQuad).Opacity = 0.;
				(Page.GetFirstChild("LABEL_BUTTON_TEST") as CMlLabel).Opacity = 0.;
				AnimMgr.Add(Page.GetFirstChild("FRAME_BUTTON_TEST"), "<frame pos=\"132.5 70\" />", Now+400, 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("QUAD_BUTTON_TEST"), "<quad opacity=\"1\" />", Now+400, 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("LABEL_BUTTON_TEST"), "<label opacity=\"1\" />", Now+400, 500, CAnimManager::EAnimManagerEasing::QuadOut);

				foreach(Control,(Page.GetFirstChild("FRAME_BG") as CMlFrame).Controls) {
					(Control as CMlQuad).Opacity = 0.;
					AnimMgr.Add(Control, "<quad opacity=\"1\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
					Control.Size.Y = 20.;
					AnimMgr.Add(Control, "<quad size=\"235 160\" />", Now+400, 500, CAnimManager::EAnimManagerEasing::QuadOut);
				}

				foreach(Control,(Page.GetFirstChild("FRAME_BG_SMALL") as CMlFrame).Controls) {
					Control.Size.Y = 0.;
					Control.RelativePosition_V3.Y = 0.;
					AnimMgr.Add(Control, "<quad size=\"60 160\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				}

				(Page.GetFirstChild("FRAME_SCRIPTING") as CMlFrame).ClipWindowSize.Y = 0.;
				(Page.GetFirstChild("FRAME_INNER_PANEL") as CMlFrame).ClipWindowRelativePosition.Y = 90.;
			}
			case "Hide": {
				End = Now;

				foreach(Control,(Page.GetFirstChild("FRAME_BG") as CMlFrame).Controls) {
					AnimMgr.Add(Control, "<quad opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
					AnimMgr.Add(Control, "<quad size=\"235 0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				}

				foreach(Control,(Page.GetFirstChild("FRAME_BG_SMALL") as CMlFrame).Controls) {
					AnimMgr.Add(Control, "<quad opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
					AnimMgr.Add(Control, "<quad size=\"60 0\" pos=\"0 -160\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				}

				AnimMgr.Add(Page.GetFirstChild("QUAD_BUTTON_SCRIPT"), "<quad opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("LABEL_BUTTON_SCRIPT"), "<label opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("QUAD_BUTTON_DOC"), "<quad opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("LABEL_BUTTON_DOC"), "<label opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("QUAD_LIGHT"), "<quad opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("QUAD_BUTTON_PUBLISH"), "<quad opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("LABEL_BUTTON_PUBLISH"), "<label opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("QUAD_BUTTON_TEST"), "<quad opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(Page.GetFirstChild("LABEL_BUTTON_TEST"), "<label opacity=\"0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
			}
			case "UpdateLocalScripto": {
				declare persistent Text[Text] CHALLENGE_LOCAL_CODES for LocalUser;
				UpdateLocalScripto(SelectedScriptIndex);
			}
		}
	}
}

foreach(Control,Loadings) {
	Control.RelativeRotation += Period / 5.0;
}

if(End == -1) {
	if(Now - Start <= 1000) {
		(Page.GetFirstChild("FRAME_SCRIPTING") as CMlFrame).ClipWindowSize.Y = AnimLib::EaseOutQuad(Now - Start - 400, 0.0, 280.0, 500);
		(Page.GetFirstChild("FRAME_DOC") as CMlFrame).ClipWindowSize.Y = AnimLib::EaseOutQuad(Now - Start - 400, 0.0, 280.0, 500);
		(Page.GetFirstChild("FRAME_INNER_PANEL") as CMlFrame).ClipWindowRelativePosition.Y = AnimLib::EaseOutQuad(Now - Start, 90.0, -160.0, 500);
	}
	else {
		(Page.GetFirstChild("FRAME_SCRIPTING") as CMlFrame).ClipWindowSize.Y = 280.0;
		(Page.GetFirstChild("FRAME_DOC") as CMlFrame).ClipWindowSize.Y = 280.0;
		(Page.GetFirstChild("FRAME_INNER_PANEL") as CMlFrame).ClipWindowRelativePosition.Y = -70.0;

		Page.GetFirstChild("FRAME_BUTTON_SCRIPT").RelativePosition_V3 = <-55.,70.>;
		(Page.GetFirstChild("QUAD_BUTTON_SCRIPT") as CMlQuad).Opacity = 1.;
		(Page.GetFirstChild("LABEL_BUTTON_SCRIPT") as CMlLabel).Opacity = 1.;
		Page.GetFirstChild("FRAME_BUTTON_DOC").RelativePosition_V3 = <10.,70.>;
		(Page.GetFirstChild("QUAD_BUTTON_DOC") as CMlQuad).Opacity = 1.;
		(Page.GetFirstChild("LABEL_BUTTON_DOC") as CMlLabel).Opacity = 1.;
		Page.GetFirstChild("QUAD_LIGHT").RelativePosition_V3 = <55.,70.>;
		(Page.GetFirstChild("QUAD_LIGHT") as CMlQuad).Opacity = 1.;
		Page.GetFirstChild("FRAME_BUTTON_PUBLISH").RelativePosition_V3 = <90.,70.>;
		(Page.GetFirstChild("QUAD_BUTTON_PUBLISH") as CMlQuad).Opacity = 1.;
		(Page.GetFirstChild("LABEL_BUTTON_PUBLISH") as CMlLabel).Opacity = 1.;
		Page.GetFirstChild("FRAME_BUTTON_TEST").RelativePosition_V3 = <132.5,70.>;
		(Page.GetFirstChild("QUAD_BUTTON_TEST") as CMlQuad).Opacity = 1.;
		(Page.GetFirstChild("LABEL_BUTTON_TEST") as CMlLabel).Opacity = 1.;

		foreach(Control,(Page.GetFirstChild("FRAME_BG") as CMlFrame).Controls) {
			(Control as CMlQuad).Opacity = 1.;
			Control.Size.Y = 160.;
		}

		foreach(Control,(Page.GetFirstChild("FRAME_BG_SMALL") as CMlFrame).Controls) {
			Control.Size.Y = 160.;
		}
	}
}
else {
	(Page.GetFirstChild("FRAME_SCRIPTING") as CMlFrame).ClipWindowSize.Y = AnimLib::EaseOutQuad(Now - End, 280.0, -280.0, 400);
	(Page.GetFirstChild("FRAME_DOC") as CMlFrame).ClipWindowSize.Y = AnimLib::EaseOutQuad(Now - End, 280.0, -280.0, 400);
	(Page.GetFirstChild("FRAME_INNER_PANEL") as CMlFrame).ClipWindowRelativePosition.Y = AnimLib::EaseOutQuad(Now - End, -70.0, -160.0, 500);
	if(Now - End > 1000) {
		SendCustomEvent("Hide_Response", []);
		End = -1;
	}
}

if(Frame_Outer_Challenge_API.ScrollMax.Y == 0) {

}
else {
	declare VisibleRatio = Frame_Outer_Challenge_API.ClipWindowSize.Y / Frame_Outer_Challenge_API.ScrollMax.Y;
	Quad_Scrollbar.Size.Y = 110*VisibleRatio;

	if(Frame_Outer_Challenge_API.ScrollOffset != PreviousScroll) {
		declare VisibleRatio = 0.;
		if(Frame_Outer_Challenge_API.ScrollMax.Y != 0) {
			declare ScrollRatio = Frame_Outer_Challenge_API.ScrollOffset.Y / Frame_Outer_Challenge_API.ScrollMax.Y;
			Quad_Scrollbar.RelativePosition_V3.Y = -ScrollRatio*(Frame_Outer_Challenge_API.ClipWindowSize.Y-Quad_Scrollbar.Size.Y);
		}

		PreviousScroll = Frame_Outer_Challenge_API.ScrollOffset;
	}
}

CHALLENGE_LOCAL_CODES[(Page.GetFirstChild("FRAME_SCRIPTS") as CMlFrame).Controls[SelectedScriptIndex].DataAttributeGet("name")] = (Page.GetFirstChild("Script") as CMlTextEdit).Value;

foreach(Control,(Page.GetFirstChild("FRAME_SCRIPTS") as CMlFrame).Controls) {
	declare Frame = (Control as CMlFrame);
	declare Quad = (Frame.GetFirstChild("QUAD_SCRIPT") as CMlQuad);

	if(RemoveMode) {
		Quad.ModulateColor = <.6,.0,.0>;
	}
	else {
		Quad.ModulateColor = <.0,.2,.4>;
	}
}
***