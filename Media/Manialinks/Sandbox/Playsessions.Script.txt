#Struct SRatingQuality {
	Real Average;
	Real AverageWithoutYou;
	Real User;
	Integer Count;
}

#Struct SRatingDifficulty {
	Real Average;
	Real AverageWithoutYou;
	Real User;
	Integer Count;
}

#Struct SRating {
	SRatingDifficulty Difficulty;
	SRatingQuality Quality;
}

#Struct SVehicle {
	SRating Rating;
	Text[] Star;
}

#Struct SPublicMap {
	Boolean Public;
	Boolean IsNadeoMap;
	Text Name;
	Text Uid;
	Text Author;
	Text OriginalName;
	Text OriginalUid;
	Text OriginalAuthor;
	SVehicle[Text] Vehicles;
}

#Struct SUser {
	Text Login;
	Text Nickname;
}

#Struct SPlaysession {
	SPublicMap Map;
	SUser[] Users;
}

declare SPlaysession[] Playsessions;

Void UpdatePlaysessions() {
	declare Offset = 0;
	declare List = (Page.GetFirstChild("FRAME_LIST") as CMlFrame);
	for(i,0,List.Controls.count-1) {
		declare Selector = (List.Controls[i] as CMlFrame);
		if(Playsessions.existskey(i)) {
			declare Playsession = Playsessions[i];
			declare Frame_Button = ((Selector.GetFirstChild("FRAME_LABEL_BUTTON") as CMlFrame).GetFirstChild("LABEL_BUTTON") as CMlLabel);
			Frame_Button.SetText(Playsession.Map.Name);
			(Selector.GetFirstChild("LABEL_COUNT") as CMlLabel).SetText(Playsession.Users.count^"");
			Selector.DataAttributeSet("playsession",i^"");
			Selector.Show();
		}
		else {
			Selector.Hide();
		}
	}
}

***Start***
***
declare Start = Now;
declare End = -1;


***

***Loop***
***
foreach(Event,PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::MouseClick: {
			switch(Event.ControlId) {
				case "QUAD_BUTTON": {
					SendCustomEvent("JoinPlaysession", [Event.Control.Parent.DataAttributeGet("playsession")]);
				}
			}
		}
		case CMlScriptEvent::Type::PluginCustomEvent: {
			switch(Event.CustomEventType) {
				case "Show": {
					Start = Now;
					End = -1;

					Page.GetFirstChild("FRAME_PLAYSESSIONS").RelativePosition_V3 = <115.,7.5>;
					AnimMgr.Add(Page.GetFirstChild("FRAME_PLAYSESSIONS"), "<frame pos=\"115 35\"/>", Now + 500 + 500, 500, CAnimManager::EAnimManagerEasing::QuadOut);

					foreach(Control,(Page.GetFirstChild("FRAME_BACKGROUND") as CMlFrame).Controls) {
						(Control as CMlQuad).Opacity = 0.;
						AnimMgr.Add(Control, "<quad opacity=\"1\"/>", Now + 500, 500, CAnimManager::EAnimManagerEasing::QuadOut);
					}

					(Page.GetFirstChild("LABEL_NOWPLAYING") as CMlLabel).Opacity = 0.;
					AnimMgr.Add(Page.GetFirstChild("LABEL_NOWPLAYING"), "<label opacity=\"1\"/>", Now + 500, 500, CAnimManager::EAnimManagerEasing::QuadOut);
					

					declare Delay = 0;
					foreach(Control,(Page.GetFirstChild("FRAME_LIST") as CMlFrame).Controls) {
						declare Frame = (Control as CMlFrame);
						(Frame.GetFirstChild("QUAD_BUTTON") as CMlQuad).Hide();
						AnimMgr.Add(Frame.GetFirstChild("QUAD_BUTTON"), "<quad hidden=\"0\"/>", Now + 1500 + Delay, 200, CAnimManager::EAnimManagerEasing::QuadOut);
						((Frame.GetFirstChild("FRAME_LABEL_BUTTON") as CMlFrame).GetFirstChild("LABEL_BUTTON") as CMlLabel).Opacity = 0.;
						AnimMgr.Add((Frame.GetFirstChild("FRAME_LABEL_BUTTON") as CMlFrame).GetFirstChild("LABEL_BUTTON"), "<label opacity=\"1\"/>", Now + 1500 + Delay, 200, CAnimManager::EAnimManagerEasing::QuadOut);
						(Frame.GetFirstChild("LABEL_COUNT") as CMlLabel).Opacity = 0.;
						AnimMgr.Add(Frame.GetFirstChild("LABEL_COUNT"), "<label opacity=\"1\"/>", Now + 1500 + Delay, 200, CAnimManager::EAnimManagerEasing::QuadOut);

						Delay += 100;
					}
				}
				case "Hide": {
					End = Now;
					AnimMgr.Add(Page.GetFirstChild("FRAME_PLAYSESSIONS"), "<frame pos=\"200 35\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				}
				case "UpdatePlaysessions": {
					declare JsonSuccess = Playsessions.fromjson(Event.CustomEventData[0]);
					UpdatePlaysessions();
				}
			}
		}
	}
}

declare Time = Now - Start - 1000;

if(Time <= 1500) {
	foreach(Control,(Page.GetFirstChild("FRAME_BACKGROUND") as CMlFrame).Controls) {
		Control.Size.Y = AnimLib::EaseOutQuad(Time, 15.0, 55.0, 500);
	}
	Page.GetFirstChild("QUAD_SCROLLBAR_BACKGROUND").Size.Y = AnimLib::EaseOutQuad(Time, 0.0, 50.0, 500);
	Page.GetFirstChild("QUAD_LIST_BG").Size.Y = AnimLib::EaseOutQuad(Time, 0.0, 50.0, 500);
	Page.GetFirstChild("QUAD_SCROLLBAR").Size.Y = AnimLib::EaseOutQuad(Time, 0.0, 20.0, 500);
}

if(End != -1) {
	if(Now - End > 1000) {
		SendCustomEvent("Hide_Response", []);
		End = -1;
	}
}
***