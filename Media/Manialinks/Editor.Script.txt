***Start***
***
Page.GetClassChildren("LOADING", Page.MainFrame, True);
declare CMlControl[] Loadings;
foreach(Control,Page.GetClassChildren_Result) Loadings.add(Control);

declare persistent Text PERSISTENT_CHALLENGE_CODE for LocalUser;
***

***Loop***
***
foreach(Event,PendingEvents) {
	if(Event.Type == CMlScriptEvent::Type::MouseClick) {
		if(Event.ControlId == "Test") {
			PERSISTENT_CHALLENGE_CODE = (Page.GetFirstChild("Script") as CMlTextEdit).Value;
			Page.GetFirstChild("LABEL_TEST").Hide();
			Page.GetFirstChild("QUAD_LOADING_TEST").Show();
			SendCustomEvent("Test", []);
		}
		if(Event.ControlId == "Designer") {
			SendCustomEvent("Designer", []);
		}
		if(Event.ControlId == "QUAD_MAINCODE") {
			
		}
		if(Event.ControlId == "QUAD_PUBLISH") {
			
		}
		if(Event.ControlId == "Button_CreateChallenge_Back") {
			SendCustomEvent("Button_CreateChallenge_Back", []);
		}
		if(Event.ControlId == "QUAD_LIGHT") {
			declare QuadBackground = (Page.GetFirstChild("QUAD_BACKGROUND") as CMlQuad);
			declare QuadLight = (Page.GetFirstChild("QUAD_LIGHT") as CMlQuad);
			if(QuadLight.ModulateColor == <1.0,1.0,1.0>) {
				QuadLight.ModulateColor = <0.3,0.3,0.3>;
				AnimMgr.Add(QuadBackground, "<quad opacity=\"1\" />", 300, CAnimManager::EAnimManagerEasing::QuadOut);
			}
			else {
				QuadLight.ModulateColor = <1.0,1.0,1.0>;
				AnimMgr.Add(QuadBackground, "<quad opacity=\"0\" />", 300, CAnimManager::EAnimManagerEasing::QuadOut);
			}
		}
	}
	if(Event.Type == CMlScriptEvent::Type::PluginCustomEvent) {
		switch(Event.CustomEventType) {
			case "Code_SetText": {
				(Page.GetFirstChild("Script") as CMlTextEdit).Value = Event.CustomEventData[0];
			}
			case "Loading_End_Test": {
				Page.GetFirstChild("LABEL_TEST").Show();
				Page.GetFirstChild("QUAD_LOADING_TEST").Hide();
			}
			case "Hide": {
				SendCustomEvent("Hide_Response", []);
			}
		}
	}
}

foreach(Control,Loadings) {
	Control.RelativeRotation += Period / 5.0;
}
***