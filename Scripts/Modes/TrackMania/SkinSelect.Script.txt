#RequireContext CTmMode

#Include "TextLib" as TextLib

#Include "Libs/BigBang1112/File.Script.txt" as File

#Include "Libs/Challenge/Vehicle.Script.txt" as Vehicle

declare Vehicle::SVehicle[] Vehicles;
declare Vehicle::SRealVehicle[] RealVehicles;
declare Vehicle::SRealVehicle RealMapVehicle;

Vehicles = Vehicle::FromFile("Media/Vehicle.json");
RealVehicles = Vehicle::Load(Vehicles, This);

ClientManiaAppUrl = "file://Media/ManiaApps/ChallengeSkinClient.Script.txt";

RequestLoadMap();

UIManager.UIAll.OverlayHideBackground = True;
UIManager.UIAll.OverlayHideNotices = True;
UIManager.UIAll.OverlayHideMapInfo = True;
UIManager.UIAll.OverlayHideOpponentsInfo = True;
UIManager.UIAll.OverlayHideChat = True;
UIManager.UIAll.OverlayHideCheckPointList = True;
UIManager.UIAll.OverlayHideCountdown = True;
UIManager.UIAll.OverlayHideChrono = True;
UIManager.UIAll.OverlayHideSpeedAndDist = True;
UIManager.UIAll.OverlayHidePersonnalBestAndRank = True;
UIManager.UIAll.OverlayHidePosition = True;
UIManager.UIAll.OverlayHideMultilapInfos = True;
UIManager.UIAll.OverlayHideSpectatorControllers = True;
UIManager.UIAll.OverlayHideSpectatorInfos = True;
UIManager.UIAll.OverlayChatHideAvatar = True;
UIManager.UIAll.ScoreTableVisibility = CUIConfig::EVisibility::ForcedHidden;
UIManager.UIAll.SmallScoreTableVisibility = CUIConfig::EVisibility::ForcedHidden;
UIManager.UIAll.ScoreTableOnlyManialink = True;

wait(Players.count>0);
declare Player <=> Players[0];
declare UI <=> UIManager.GetUI(Player);

SpawnPlayer(Player,0,Now-10000);

UI.UISequence = CUIConfig::EUISequence::CustomMTClip;
UI.UISequence_CustomMTClip = "CH_SHOWCASE";

//Player.RaceStartTime = -1;

declare netwrite Vehicle::SVehicle[] Server_Vehicles for UI;
Server_Vehicles = Vehicles;

declare netwrite Integer Server_CurrentVehicle for UI;
Server_CurrentVehicle = -1;

wait(MapLoaded);
declare MapModelName = TextLib::Replace(This.MapPlayerModelName, "\\", "/");

declare Vehicle::SVehicle MapVehicle;
for(I, 0, Vehicles.count-1) {
	declare Vehicle = Vehicles[I];
	declare RealVehicle = RealVehicles[I];
	if(Vehicle.Name == MapModelName || Vehicle.File == MapModelName) {
		MapVehicle = Vehicle;
		RealMapVehicle = RealVehicle;
	}
}

declare netwrite Vehicle::SVehicle Server_MapVehicle for UI;
Server_MapVehicle = MapVehicle;

declare netread Integer Client_VehicleIndex for UI;

declare CTmPlayer[] RespawnList;

declare persistent Text[Text] P_Skin for Player.User;

declare Text PrevSkin;

while(True) {
	foreach(Player,RespawnList) {
		This.SpawnPlayer(Player, 0, Now-10000);
	}
	RespawnList.clear();

	foreach(Event,PendingEvents) {
		switch(Event.Type) {
			case CTmModeEvent ::EType::WayPoint: {
				if(Event.IsEndRace) {
					
				}
				else if(Event.IsEndLap) {
				
				}
				else {
					
				}
			}
		}
	}
	
	foreach(Event,UIManager.PendingEvents) {
		switch(Event.Type) {
			case CUIConfigEvent::EType::OnLayerCustomEvent: {
				foreach(Player,This.Players) {
					if(Event.UI == This.UIManager.GetUI(Player)) {						
						declare netread Integer Client_VehicleIndex for Event.UI;
						
						switch(Event.CustomEventType) {
							case "VehicleIndexChanged": {
								
							}
						}
					}
				}
			}
		}
	}
	
	declare Ident OldModelId for Player;
	
	declare VehicleName = Server_Vehicles[Client_VehicleIndex].Name;
	
	declare TM2Vehicles = ["CanyonCar", "StadiumCar", "ValleyCar", "LagoonCar"];
	
	if(P_Skin.existskey(VehicleName)) {
		if(Vehicles.existskey(Client_VehicleIndex)) {
			if(Map.CollectionName != "Stadium" && TM2Vehicles.exists(VehicleName))
				Player.ForceModelId = RealVehicles[Client_VehicleIndex].DefaultId;
			else if(RealVehicles[Client_VehicleIndex].Id.existskey(P_Skin[VehicleName])) // If exact skin doesnt exist
				Player.ForceModelId = RealVehicles[Client_VehicleIndex].Id[P_Skin[VehicleName]];
			else Player.ForceModelId = RealVehicles[Client_VehicleIndex].Id[""];
		} else Player.ForceModelId = RealVehicles[Client_VehicleIndex].Id[""];
	} else Player.ForceModelId = RealVehicles[Client_VehicleIndex].Id[""];
		
	if(Player.ForceModelId != OldModelId) {
		This.SpawnPlayer(Player, 0, -1);
		RespawnList.add(Player);
			
		OldModelId = Player.ForceModelId;
	}
	
	
	if(P_Skin.existskey(VehicleName)) {
		if(P_Skin[VehicleName] != PrevSkin) {
			// skin changed
			
			PrevSkin = P_Skin[VehicleName];
		}
	}
	
	yield;
}