#Include "TextLib" as TextLib

#Include "Libs/BigBang1112/Layers.Script.txt" as Layers
#Include "Libs/BigBang1112/Manialink.Script.txt" as Manialink
#Include "Libs/BigBang1112/File.Script.txt" as File
#Include "Libs/BigBang1112/Http.Script.txt" as Http
#Include "Libs/BigBang1112/Auth.Script.txt" as Auth

declare Text AuthorizeUrl;
declare Boolean Pass;

Boolean CanPass() {
	return Pass;
}

Void Start() {	
	declare AuthRequestPage = Http::SyncGET("https://www.maniaplanet.com/login/oauth2/authorize?response_type=token&scope=basic&state=dsgasgsdag&client_id=b1a3d10ba7&login=bigbang1112&token="^Auth::GetToken().Value^"&redirect_uri="^TextLib::URLEncode("http://localhost/challenge/auth"));
	if(AuthRequestPage.StatusCode != 200) {
		Dialog_Message("No internet connection. I can't let you in. :/");
	}
	else {
		declare FindAuthorizeUrl = TextLib::RegexMatch("manialink=\"(.*?)\"", AuthRequestPage.Result, "i");
		
		if(FindAuthorizeUrl[1] == "") {
			declare FindExistingAuthUrl = TextLib::RegexMatch("OpenLink\\(\"(.*?)\", ::LinkType::ManialinkBrowser\\)", AuthRequestPage.Result, "i");
			if(FindExistingAuthUrl[1] != "") {
				declare AuthRequestPage = Http::SyncGET(FindExistingAuthUrl[1]);
				if(AuthRequestPage.StatusCode != 200) {
					Dialog_Message("No internet connection. I can't let you in. :/");
				}
				else {
					Pass = True;
				}
				Http.Destroy(AuthRequestPage);
			}
		}
		else {
			Layers::Create("Auth", Manialink::FromFile("Media/Manialinks/Auth"), True);
			AuthorizeUrl = FindAuthorizeUrl[1];
		}
	}
	
	Http.Destroy(AuthRequestPage);
}

Void Event(CManiaAppEvent _Event) {
	declare Event <=> _Event;

	if(Event.Type == CManiaAppEvent::EType::LayerCustomEvent) {
		switch(Event.CustomEventType) {
			case "Authorize": {
				if(AuthorizeUrl != "") {
					declare Success = Http::AsyncGET("AuthAccept",AuthorizeUrl);
				}
			}
			default: {
			
			}
		}
	}
}

Void Async() {
	if(Http::IsCompleted("AuthAccept")) {
		if(Http::IsSuccessful("AuthAccept")) {
			Pass = True;
		}
		else {
			log("Http error: " ^ Http::GetStatusCode("AuthAccept"));
		}
		Http::Destroy("AuthAccept");
	}
}

Void Loop() {
	
}

Void End() {
	Layers::Destroy("Auth");
}