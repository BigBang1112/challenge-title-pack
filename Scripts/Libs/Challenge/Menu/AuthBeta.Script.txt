#Include "TextLib" as TextLib

#Include "Libs/BigBang1112/Layers.Script.txt" as Layers
#Include "Libs/BigBang1112/Manialink.Script.txt" as Manialink
#Include "Libs/BigBang1112/File.Script.txt" as File
#Include "Libs/BigBang1112/Http.Script.txt" as Http
#Include "Libs/BigBang1112/Auth2.Script.txt" as Auth2
#Include "Libs/BigBang1112/Internet.Script.txt" as Internet
#Include "Libs/BigBang1112/Settings.Script.txt" as Settings

#Include "Libs/Challenge/Service/Status.Script.txt" as Service_Status

#Struct SAccess {
	Boolean Pass;
	Boolean Insider;
	Boolean Organizer;
	Boolean Moderator;
	Boolean Owner;
	Text Token;
	Text UserToken;
}

#Const C_Manialink "Media/Manialinks/Base/AuthBeta"

declare Text AcceptUrl;
declare SAccess Access;

SAccess GetAccess() {
	return Access;
}

Void Init() {
	Layers::Create("AuthBeta", Manialink::FromFile(C_Manialink, True, [], Settings::Get().Theme));
}

Void Event(CManiaAppEvent _Event) {
	declare Event <=> _Event;

	if(Event.Type == CManiaAppEvent::EType::LayerCustomEvent) {
		switch(Event.CustomEventType) {
			case "Authorize": {
				if(AcceptUrl != "") {
					declare Success = Auth2::AsyncAuthorize("Authorize", AcceptUrl);
				}
				else {
					declare Status = Service_Status::LastStatus(LocalUser);
					declare Success = Auth2::AsyncAuthorize("Authorize", "b1a3d10ba7", "basic maps", Status.Global.Service^"/auth.php");
				}
			}
			case "Back": {
				Layers::Show("Menu", True);
				Layers::Show("Quickplay", True);
				Layers::Show("Top", True);
				Layers::Show("Playsessions", True);
				Layers::Show("News", True);
				Layers::Hide("AuthBeta", False);
			}
			default: {
				
			}
		}
	}
}

Void Async() {
	if(Auth2::IsCompleted("Authorize")) {
		if(Auth2::IsSuccessful("Authorize")) {
			Layers::SendEvent("AuthBeta", "HideRequesting");
			
			declare Result = Auth2::GetAsyncAuthorizeResult("Authorize");
			if(Result.AlreadyAccepted) {
				declare Success = Http::AsyncGET("Redirect", Result.RedirectUrl);
			}
			else {
				AcceptUrl = Result.AcceptUrl;
			}
		}
		else {
			log("Authorize: " ^ Auth2::GetStatusCode("Authorize"));
		}
		Auth2::Destroy("Authorize");
	}
	if(Http::IsCompleted("Redirect")) {
		if(Http::IsSuccessful("Redirect")) {
			declare JsonSuccess = Access.fromjson(Http::GetResult("Redirect"));
			
			Layers::Show("Menu", True);
			Layers::Show("Quickplay", True);
			Layers::Show("Top", True);
			Layers::Show("Playsessions", True);
			Layers::Show("News", True);
			Layers::Hide("AuthBeta", False);
			
			Layers::SendEvent("Top", "HideJoin");
		}
		else {
			log("Redirect: " ^ Http::GetStatusCode("Redirect"));
			Layers::SendEvent("AuthBeta", "ShowConnectionError", Http::GetStatusCode("Redirect")^"");
		}
		Http::Destroy("Redirect");
	}
}

Void Loop() {
	
}

Void End() {
	Layers::Destroy("AuthBeta");
}